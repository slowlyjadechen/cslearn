#####笔记内容来自廖雪峰Git教程https://www.liaoxuefeng.com/wiki/896043488029600 #####
##### 作为git学习的笔记以及Git使用的练习#####

1. 基本命令 
初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成。

要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。git diff在提交之前查看前后的区别，提交之后（git add之后）就不可以看了。



2.变更
2.1 版本回退
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。比如 git reset --hard HEAD^回退到上一个版本，git reset --hard HEAD~100回退到往前的第100个版本
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

2.2 工作区和暂存区
工作区（Working Directory）就是你在电脑里能看到的目录，比如一个文件夹
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
git add把文件添加进去，实际上就是把文件修改添加到暂存区；
git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

2.3 修改
每次修改，如果不用git add到暂存区，那就不会加入到commit中。

2.4 撤销修改
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

2.5 删除文件
一般直接在工作区将文件删除，然后使用git rm <文件名>删除版本库中的文件。如果删错了，使用 git checkout --<文件名>，用版本库里的版本替换工作区的版本
git checkout -- file回退到最近一次git add 或者git commit的状态，并且只能回到最新状态



3.远程仓库
3.1 关联远程仓库
方法https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416

3.2 常用命令
git clone 地址：将远程仓库内容克隆到本地，并将目标文件夹和远程仓库关联
git push：将缓存区内容推送到远程



4.分支管理
4.1 创建和合并分支
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>或者git switch <name>
创建+切换分支：git checkout -b <name>或者git switch -c <name>
合并某分支到*当前分支*：git merge <name>
删除分支：git branch -d <name>
>使用merge合并后main分支的内容并没有更新，merge后使用git push命令之后远程main分支的内容就是最新的

4.2 冲突
要合并的两个分支相比于之前的位置都移动了相同的步数，如果存在内容不同，合并的时候就会有冲突。这时文档里会提示对应的冲突内容，将冲突内容修改后重新提交即可，。

4.3 bug分支
https://www.liaoxuefeng.com/wiki/896043488029600/900388704535136

4.4 新功能分区
开发一个新feature，最好新建一个分支；如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除

4.5 多人协作
https://www.liaoxuefeng.com/wiki/896043488029600/900375748016320

4.6 rebase
https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648



5.标签
5.1 创建标签
命令git tag <tagname>用于新建一个标签，默认为HEAD，也可以指定一个commit id，如git tag <tagname> <commit id>
命令git tag -a <tagname> -m "blablabla..."可以指定标签信息；也可以指定一个commit id，ID加在最后同上；
命令git tag可以查看所有标签。
可以用git show <tagname>查看标签信息

5.2 操作标签
https://www.liaoxuefeng.com/wiki/896043488029600/902335479936480